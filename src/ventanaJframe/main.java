package ventanaJframe;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader; 
import java.io.IOException; 
import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYSplineRenderer;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
 
/**
 *
 * @author
 */
public class main extends javax.swing.JFrame {
    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	/**
     * Creates new form main
     */
    
    String  a = "entrada/";
    String c;
    String linea = null; 
    int lNumeroLineas = 0; 
    String[] values; 
    ChartPanel panel;
    ChartPanel  panels = null; 
    JFreeChart chart;
    String colName;
    String valores="";  
    String valoresOne=""; 
    int selectedIndexx, selectedIndex, colums, fila;
    private boolean ALLOW_ROW_SELECTION = true;    
    private boolean ALLOW_COLUMN_SELECTION = true;    
    
    public main() {
        initComponents();
       
        this.setLocationRelativeTo(null);
        modelo =   new DefaultListModel();
        LISTA.setModel(modelo);        
        botonTabla.setEnabled(false);
        botonGraficar.setEnabled(false);
        botonBorrar.setEnabled(false); 
        BtGuardar.setEnabled(false);
        buttonEliminar.setVisible(false);
        buttonEliminar1.setVisible(false);
        LbLTitulo.setVisible(false);
        LbLTitulo1.setVisible(false);
        LbLTitulo2.setVisible(false);
        LbLTutulo3.setVisible(false);
        jComboBox1.setVisible(false);
        jComboBox2.setVisible(false);
        jTextField1.setVisible(false);
        BPersonalizar.setVisible(false);
        LbLX.setVisible(false);
        LbLY.setVisible(false);
              
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
        
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelGrafica = new javax.swing.JPanel();
        panelCont = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        panelTabla = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        LISTA = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        botonArbir = new javax.swing.JButton();
        botonTabla = new javax.swing.JButton();
        botonGraficar = new javax.swing.JButton();
        botonBorrar = new javax.swing.JButton();
        botonSalir = new javax.swing.JButton();
        BtGuardar = new javax.swing.JButton();
        buttonEliminar = new javax.swing.JButton();
        buttonEliminar1 = new javax.swing.JButton();
        LbLTitulo = new javax.swing.JLabel();
        LbLTitulo1 = new javax.swing.JLabel();
        LbLTitulo2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        LbLTutulo3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        BPersonalizar = new javax.swing.JButton();
        LbLX = new javax.swing.JLabel();
        LbLY = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Graficador");
        setBackground(new java.awt.Color(0, 102, 102));

        panelGrafica.setBackground(new java.awt.Color(204, 204, 204));
        panelGrafica.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(153, 153, 153), null, null));

        panelTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                " Columna 1 ", " Columna 2", " Columna 3", " Columna 4", " Columna 5", " Columna 6", " Columna 7", " Columna 8", " Columna 9", " Columna 10"
            }
        ));
        jScrollPane2.setViewportView(panelTabla);

        javax.swing.GroupLayout panelContLayout = new javax.swing.GroupLayout(panelCont);
        panelCont.setLayout(panelContLayout);
        panelContLayout.setHorizontalGroup(
            panelContLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 895, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelContLayout.setVerticalGroup(
            panelContLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout panelGraficaLayout = new javax.swing.GroupLayout(panelGrafica);
        panelGrafica.setLayout(panelGraficaLayout);
        panelGraficaLayout.setHorizontalGroup(
            panelGraficaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGraficaLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(panelCont, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelGraficaLayout.setVerticalGroup(
            panelGraficaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGraficaLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(panelCont, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        LISTA.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        LISTA.setToolTipText("Listado de archivos ");
        LISTA.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                LISTAValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(LISTA);

        jLabel2.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        jLabel2.setText("Lista de Tabla");

        botonArbir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icono/abrir.gif"))); // NOI18N
        botonArbir.setText("Abrir");
        botonArbir.setToolTipText("Abre archivo");
        botonArbir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonArbirActionPerformed(evt);
            }
        });

        botonTabla.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icono/browser1.gif"))); // NOI18N
        botonTabla.setText("Ver ");
        botonTabla.setToolTipText("Ver archivo seleccionado");
        botonTabla.setMaximumSize(new java.awt.Dimension(83, 33));
        botonTabla.setMinimumSize(new java.awt.Dimension(83, 33));
        botonTabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonTablaMouseClicked(evt);
            }
        });
        botonTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonTablaActionPerformed(evt);
            }
        });

        botonGraficar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icono/plot2plane.gif"))); // NOI18N
        botonGraficar.setText("Graficar");
        botonGraficar.setToolTipText("Grafica archivo seleccionado");
        botonGraficar.setMaximumSize(new java.awt.Dimension(83, 33));
        botonGraficar.setMinimumSize(new java.awt.Dimension(83, 33));
        botonGraficar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGraficarActionPerformed(evt);
            }
        });

        botonBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icono/papelera.png"))); // NOI18N
        botonBorrar.setText("Borrar");
        botonBorrar.setToolTipText("Borrar archivo de la lista");
        botonBorrar.setMaximumSize(new java.awt.Dimension(83, 33));
        botonBorrar.setMinimumSize(new java.awt.Dimension(83, 33));
        botonBorrar.setPreferredSize(new java.awt.Dimension(89, 33));
        botonBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBorrarActionPerformed(evt);
            }
        });

        botonSalir.setText("Salir");
        botonSalir.setToolTipText("Salir del Sistema");
        botonSalir.setMaximumSize(new java.awt.Dimension(83, 33));
        botonSalir.setMinimumSize(new java.awt.Dimension(83, 33));
        botonSalir.setPreferredSize(new java.awt.Dimension(83, 33));
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });

        BtGuardar.setFont(new java.awt.Font("DejaVu Sans", 1, 8)); // NOI18N
        BtGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icono/picture.gif"))); // NOI18N
        BtGuardar.setText("Guardar");
        BtGuardar.setToolTipText("Guardar gráfico");
        BtGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtGuardarActionPerformed(evt);
            }
        });

        buttonEliminar.setFont(new java.awt.Font("DejaVu Sans", 1, 8)); // NOI18N
        buttonEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icono/papelera.png"))); // NOI18N
        buttonEliminar.setText("Borrar Tabla");
        buttonEliminar.setToolTipText("Borrar tabla");
        buttonEliminar.setMaximumSize(new java.awt.Dimension(52, 36));
        buttonEliminar.setMinimumSize(new java.awt.Dimension(52, 36));
        buttonEliminar.setPreferredSize(new java.awt.Dimension(52, 36));
        buttonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEliminarActionPerformed(evt);
            }
        });

        buttonEliminar1.setFont(new java.awt.Font("DejaVu Sans", 1, 8)); // NOI18N
        buttonEliminar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icono/papelera.png"))); // NOI18N
        buttonEliminar1.setText("Borrar gráfico");
        buttonEliminar1.setToolTipText("Borrar gráfico");
        buttonEliminar1.setMaximumSize(new java.awt.Dimension(52, 36));
        buttonEliminar1.setMinimumSize(new java.awt.Dimension(52, 36));
        buttonEliminar1.setPreferredSize(new java.awt.Dimension(52, 36));
        buttonEliminar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEliminar1ActionPerformed(evt);
            }
        });

        LbLTitulo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        LbLTitulo.setForeground(new java.awt.Color(255, 0, 51));
        LbLTitulo.setText("  Elija los datos para la Gráfica:");

        LbLTitulo1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        LbLTitulo1.setText("X:");

        LbLTitulo2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        LbLTitulo2.setText("Y:");

        jComboBox1.setToolTipText("Seleccione Fila");

        jComboBox2.setSelectedItem(panelTabla);
        jComboBox2.setToolTipText("Seleccione Columna");

        LbLTutulo3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        LbLTutulo3.setForeground(new java.awt.Color(255, 0, 51));
        LbLTutulo3.setText("Elija Título para la Gráfica:");

        jTextField1.setToolTipText("Titulo de gráfico");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        BPersonalizar.setBackground(new java.awt.Color(255, 255, 0));
        BPersonalizar.setText("Graficar");
        BPersonalizar.setToolTipText("Ejecuta gráfico personalizado");
        BPersonalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BPersonalizarActionPerformed(evt);
            }
        });

        LbLX.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N

        LbLY.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BtGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonEliminar1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(LbLTitulo)
                            .addComponent(LbLTutulo3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(LbLTitulo1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(LbLX, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(LbLTitulo2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(LbLY, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBox2, 0, 132, Short.MAX_VALUE)))))
                    .addComponent(panelGrafica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(botonSalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonArbir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonTabla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonGraficar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BPersonalizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonArbir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonGraficar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BPersonalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panelGrafica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LbLY, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LbLX, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(BtGuardar)
                        .addComponent(buttonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(buttonEliminar1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LbLTitulo2)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LbLTitulo1)
                            .addComponent(LbLTitulo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LbLTutulo3))))
                .addGap(6, 6, 6))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void botonTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonTablaActionPerformed
          
        if (Seleccion<0){
            JOptionPane.showMessageDialog(null, "ERROR. DEBE SELECCIONAR UNA TABLA", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
        }else{              
        lNumeroLineas=0;  
        File archivo = null;
        FileReader fr = null;
        BufferedReader br = null;
 
            try {
            // Apertura del fichero y creacion de BufferedReader para poder
            // hacer una lectura comoda (disponer del metodo readLine()).
        
               String b = name;
               String c = a+b;
               archivo = new File (c);
        
               fr = new FileReader (archivo);
               br = new BufferedReader(fr);
        
               //LECTURA DEL FICHERO
              
               panelCont.setVisible(true);
               panelTabla.setVisible(true);
               panelGrafica.setVisible(true);
               botonGraficar.setEnabled(true);
               BtGuardar.setEnabled(false);
               botonBorrar.setEnabled(false);
               botonArbir.setEnabled(false);
               buttonEliminar.setVisible(true);
               buttonEliminar1.setVisible(false);
                    
                    while((linea=br.readLine())!=null){                
        
                        lNumeroLineas++; //CUENTO EL NÚMERO DE LÍENAS DEL ARCHIVO           
        
                        panelTabla.setBorder(BorderFactory.createTitledBorder (BorderFactory.createEtchedBorder (),
                               c, TitledBorder.CENTER, TitledBorder.TOP)); //CREO BORDE Y COLOCO EL NOMBRE A LA TABLA          
            
                        String[] values = linea.split("   ");          
                        //System.out.println(lNumeroLineas); //IMPRIMO # DE LÍNEAS DEL ARCHIVO
                        //System.out.println(Arrays.toString(values)); //SE CONVIERTEN EN ARRAY Y SE MANDA A IMPRIMIR POR CONSOLA
                        //System.out.println(" "); //SE IMPRIMEN CON UNA LÍNEA DE POR MEDIO
                         
                        int col = 0; 
                        int i = 0;
                        while (i < values.length){ //HAGO EL LLENADO DE LA TABLA     
                            panelTabla.setValueAt(values[i], lNumeroLineas, col); 
                            col++; 
                            i++;  
                        } 
                        
                        //REFRESCO LA TABLA
                        panelTabla.paintImmediately(panelTabla.getX(),panelTabla.getY(), panelTabla.getWidth(), panelTabla.getHeight());                                        
            
                        //JTABLE VIENE POR DEFECTO A 100 FILAS. CON ESTE CÓDIGO AGREGO FILAS SI EL ARCHIVO PASA DE 100.
                        int filas =0;
                        DefaultTableModel temp = (DefaultTableModel) panelTabla.getModel(); 
                        temp.addRow(new Object[filas]);  
                    }         
                        fr.close();
            }catch( IOException e) {}                                                    
        }        
    }//GEN-LAST:event_botonTablaActionPerformed

    private void botonArbirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonArbirActionPerformed
       
       //CREO EL FILECHOOSER PARA BUSCAR EL ARCHIVO QUE QUIERO CARGAR
        JFileChooser fileChooser = new JFileChooser();       
        int result = fileChooser.showOpenDialog(null);  
          if ( result == JFileChooser.APPROVE_OPTION ){            
            name = fileChooser.getSelectedFile().getName();                
            modelo.addElement(name);                              
          }
        botonTabla.setEnabled(true);
        botonBorrar.setEnabled(false);
        BtGuardar.setEnabled(false);
        buttonEliminar.setVisible(false);  
    }//GEN-LAST:event_botonArbirActionPerformed
    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        System.exit(0);  //SALGO DEL SISTEMA    
    }//GEN-LAST:event_botonSalirActionPerformed

    private void botonBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBorrarActionPerformed
    
        //BORRO EL ARCHIVO PREVIAMENTE AGREGADO AL OBJETO LISTA
        if (Seleccion>=0){
            modelo.removeElementAt(Seleccion); 
        } else {
              if (Seleccion<0){
                JOptionPane.showMessageDialog(null, "ERROR. DEBE SELECCIONAR UNA TABLA", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
                botonTabla.setEnabled(true);
                botonGraficar.setEnabled(true);
                botonBorrar.setEnabled(true);             
              }
        }
         panelCont.setVisible(false);
         panelTabla.setVisible(false);
         botonTabla.setEnabled(false);
         botonGraficar.setEnabled(false);
         botonBorrar.setEnabled(false);
         BtGuardar.setEnabled(false);
         buttonEliminar.setVisible(false);
    }//GEN-LAST:event_botonBorrarActionPerformed
   
    private void LISTAValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_LISTAValueChanged
        Seleccion = LISTA.getSelectedIndex();   //AGREGO UN ARCHIVO AL OBJETO LISTA       
    }//GEN-LAST:event_LISTAValueChanged
 
    @SuppressWarnings("null")
    
    private void GRActionPerformed(String titulo) {
    buttonEliminar.setVisible(false);
            buttonEliminar1.setVisible(false);
            BtGuardar.setEnabled(true);
            botonBorrar.setEnabled(false);
            botonGraficar.setEnabled(false);
            LbLTitulo.setVisible(true);
            LbLTitulo1.setVisible(true);
            LbLTitulo2.setVisible(true);
            LbLTutulo3.setVisible(true);
            jComboBox1.setVisible(true);
            jComboBox2.setVisible(true); 
            jTextField1.setVisible(true);
            BPersonalizar.setVisible(true);
            botonTabla.setEnabled(false);
            panelCont.setVisible(false);
                      
            XYSplineRenderer renderer = new XYSplineRenderer();
            XYSeriesCollection dataset = new XYSeriesCollection();
            
            ValueAxis x = new NumberAxis();
            ValueAxis y = new NumberAxis();
            
            XYSeries series = new XYSeries("Datos");
            XYPlot plot;
            
            for (int fila=0; fila<lNumeroLineas; fila++){ //SE TOMAN LOS DATOS PARA HACER LA GRÁFICA
                try {
                    series.add(Float.parseFloat(String.valueOf(panelTabla.getValueAt(fila, 0))),
                       Float.parseFloat(String.valueOf(panelTabla.getValueAt(fila, 1))));
                } catch (NumberFormatException e) {}
            }
           
            dataset.addSeries(series);
            x.setLabel("Eje X");
            y.setLabel("Eje Y");
            plot = new XYPlot(dataset,x,y,renderer); 
            chart = new  JFreeChart(plot);
            chart.setTitle(titulo);
            panels = new ChartPanel(chart);
            panels.setBounds(12, 12, 1010, 610);
            panelGrafica.add(panels);
            panels.repaint();
    }
   
    private void botonGraficarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGraficarActionPerformed
 
       int ax = JOptionPane.showConfirmDialog(null, "¿DESEA PERSONALIZAR SU GRÁFICA?"); 
        
        if(ax == JOptionPane.YES_OPTION){
            LbLTitulo.setVisible(true);
            LbLTitulo1.setVisible(true);
            LbLTitulo2.setVisible(true);
            LbLTutulo3.setVisible(true);
            jComboBox1.setVisible(true);
            jComboBox2.setVisible(true);
            jTextField1.setVisible(true);
            BPersonalizar.setVisible(true);

           colums = panelTabla.getColumnCount();
           for ( int i = 0; i < colums; i++){
               colName = panelTabla.getModel().getColumnName(i);
               jComboBox1.setSelectedIndex(-1);
               jComboBox2.setSelectedIndex(-1);
               jComboBox1.addItem(colName);
               jComboBox2.addItem(colName);
           }

           ActionListener actionListener = new ActionListener() {
            public void actionPerformed(ActionEvent actionEvent) {
            
            selectedIndexx = jComboBox1.getSelectedIndex();           
            fila = panelTabla.getRowCount();

            if (selectedIndexx == 0){
                for (int x = 0; x < fila; x++) {              
                    String valor = (String) panelTabla.getValueAt(x,0);
                    valores += valor;                          
                }
                System.out.println("Selected: " + jComboBox1.getSelectedItem() + " valores de la columna: " + valores);
                }else{
                  if (selectedIndexx == 1){
                      for (int x = 0; x < fila; x++) {              
                          String valor = (String) panelTabla.getValueAt(x,1);
                          valores += valor;  
                      }
                      System.out.println("Selected: " + jComboBox1.getSelectedItem() + " valores de la columna: " + valores);
                      }else{
                        if (selectedIndexx == 2){
                            for (int x = 0; x < fila; x++) {              
                                String valor = (String) panelTabla.getValueAt(x,2);
                                valores += valor;  
                            }
                            System.out.println("Selected: " + jComboBox1.getSelectedItem() + " valores de la columna: " + valores);
                            }else{
                               if (selectedIndexx == 3){
                                  for (int x = 0; x < fila; x++) {              
                                      String valor = (String) panelTabla.getValueAt(x,3);
                                      valores += valor; 
                                  }
                                  System.out.println("Selected: " + jComboBox1.getSelectedItem() + " valores de la columna: " + valores);
                                  }else{
                                    if (selectedIndexx == 4){
                                       for (int x = 0; x < fila; x++) {              
                                           String valor = (String) panelTabla.getValueAt(x,4);
                                           valores += valor; 
                                        }
                                        System.out.println("Selected: " + jComboBox1.getSelectedItem() + " valores de la columna: " + valores);
                                        }else{
                                          if (selectedIndexx == 5){
                                             for (int x = 0; x < fila; x++) {              
                                                 String valor = (String) panelTabla.getValueAt(x,5);
                                                 valores += valor; 
                                             }
                                             System.out.println("Selected: " + jComboBox1.getSelectedItem() + " valores de la columna: " + valores);
                                             }else{
                                               if (selectedIndexx == 6){
                                                  for (int x = 0; x < fila; x++) {              
                                                      String valor = (String) panelTabla.getValueAt(x,6);
                                                      valores += valor; 
                                                  }
                                                  System.out.println("Selected: " + jComboBox1.getSelectedItem() + " valores de la columna: " + valores);
                                                  }else{
                                                    if (selectedIndexx == 7){
                                                       for (int x = 0; x < fila; x++) {              
                                                           String valor = (String) panelTabla.getValueAt(x,7);
                                                           valores += valor; 
                                                       }
                                                       System.out.println("Selected: " + jComboBox1.getSelectedItem() + " valores de la columna: " + valores);
                                                       }else{
                                                         if (selectedIndexx == 8){
                                                            for (int x = 0; x < fila; x++) {              
                                                                String valor = (String) panelTabla.getValueAt(x,8);
                                                                valores += valor; 
                                                            }
                                                            System.out.println("Selected: " + jComboBox1.getSelectedItem() + " valores de la columna: " + valores);
                                                            }else{
                                                              if (selectedIndexx == 9){
                                                                 for (int x = 0; x < fila; x++) {              
                                                                     String valor = (String) panelTabla.getValueAt(x,9);
                                                                     valores += valor; 
                                                                 }
                                                                 System.out.println("Selected: " + jComboBox1.getSelectedItem() + " valores de la columna: " + valores);
                                                              }
                                                          }
                                                      }
                                                  }
                                              }
                                          }
                                     }                                                           
                                 }
                             }
                         }
                     }           
                  };
            jComboBox1.addActionListener(actionListener);
            
            ActionListener actionListeners = new ActionListener() {
            public void actionPerformed(ActionEvent actionEvent) {
            
            selectedIndex = jComboBox2.getSelectedIndex();
            int fila = panelTabla.getRowCount();
            if (selectedIndex == 0){
                for (int x = 0; x < fila; x++) {              
                    String valor = (String) panelTabla.getValueAt(x,0); 
                    valoresOne += valor;                          
                }
                System.out.println("Selected: " + jComboBox2.getSelectedItem() + " valores de la columna: " + valoresOne);
                }else{
                  if (selectedIndex == 1){
                      for (int x = 0; x < fila; x++) {              
                          String valor = (String) panelTabla.getValueAt(x,1);
                          valoresOne += valor;  
                      }
                      System.out.println("Selected: " + jComboBox2.getSelectedItem() + " valores de la columna: " + valoresOne);
                      }else{
                        if (selectedIndex == 2){
                            for (int x = 0; x < fila; x++) {              
                                String valor = (String) panelTabla.getValueAt(x,2);
                                valoresOne += valor;  
                            }
                            System.out.println("Selected: " + jComboBox2.getSelectedItem() + " valores de la columna: " + valoresOne);
                            }else{
                               if (selectedIndex == 3){
                                  for (int x = 0; x < fila; x++) {              
                                      String valor = (String) panelTabla.getValueAt(x,3);
                                      valoresOne += valor; 
                                  }
                                  System.out.println("Selected: " + jComboBox2.getSelectedItem() + " valores de la columna: " + valoresOne);
                                  }else{
                                    if (selectedIndex == 4){
                                       for (int x = 0; x < fila; x++) {              
                                           String valor = (String) panelTabla.getValueAt(x,4);
                                           valoresOne += valor; 
                                        }
                                        System.out.println("Selected: " + jComboBox2.getSelectedItem() + " valores de la columna: " + valoresOne);
                                        }else{
                                          if (selectedIndex == 5){
                                             for (int x = 0; x < fila; x++) {              
                                                 String valor = (String) panelTabla.getValueAt(x,5);
                                                 valoresOne += valor; 
                                             }
                                             System.out.println("Selected: " + jComboBox2.getSelectedItem() + " valores de la columna: " + valoresOne);
                                             }else{
                                               if (selectedIndex == 6){
                                                  for (int x = 0; x < fila; x++) {              
                                                      String valor = (String) panelTabla.getValueAt(x,6);
                                                      valoresOne += valor; 
                                                  }
                                                  System.out.println("Selected: " + jComboBox2.getSelectedItem() + " valores de la columna: " + valoresOne);
                                                  }else{
                                                    if (selectedIndex == 7){
                                                       for (int x = 0; x < fila; x++) {              
                                                           String valor = (String) panelTabla.getValueAt(x,7);
                                                           valoresOne += valor; 
                                                       }
                                                       System.out.println("Selected: " + jComboBox2.getSelectedItem() + " valores de la columna: " + valoresOne);
                                                       }else{
                                                         if (selectedIndex == 8){
                                                            for (int x = 0; x < fila; x++) {              
                                                                String valor = (String) panelTabla.getValueAt(x,8);
                                                                valoresOne += valor; 
                                                            }
                                                            System.out.println("Selected: " + jComboBox2.getSelectedItem() + " valores de la columna: " + valoresOne);
                                                            }else{
                                                              if (selectedIndex == 9){
                                                                 for (int x = 0; x < fila; x++) {              
                                                                     String valor = (String) panelTabla.getValueAt(x,9);
                                                                     valoresOne += valor; 
                                                                 }
                                                                 System.out.println("Selected: " + jComboBox2.getSelectedItem() + " valores de la columna: " + valoresOne);
                                                                 }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }                                                           
                                    }
                                }
                            }
                        }
                    };        
        jComboBox2.addActionListener(actionListeners); 
        }else{
            if (ax == JOptionPane.NO_OPTION){
        
                buttonEliminar.setVisible(false);
                buttonEliminar1.setVisible(true);
                BtGuardar.setEnabled(true);
                botonBorrar.setEnabled(false);
                botonGraficar.setEnabled(false);
                LbLTitulo.setVisible(false);
                LbLTitulo1.setVisible(false);
                LbLTitulo2.setVisible(false);
                LbLTutulo3.setVisible(false);
                jComboBox1.setVisible(false);
                jComboBox2.setVisible(false);
                jTextField1.setVisible(false);
                BPersonalizar.setVisible(false);
                botonTabla.setEnabled(false);
                panelCont.setVisible(false);
                      
                XYSplineRenderer renderer = new XYSplineRenderer();
                XYSeriesCollection dataset = new XYSeriesCollection();
            
                ValueAxis x = new NumberAxis();
                ValueAxis y = new NumberAxis();
            
                XYSeries series = new XYSeries("Datos");
                XYPlot plot;
                
                for (int fila=0; fila<lNumeroLineas; fila++){ //SE TOMAN LOS DATOS PARA HACER LA GRÁFICA
                   try {
                       series.add(Float.parseFloat(String.valueOf(panelTabla.getValueAt(fila, 0))),
                          Float.parseFloat(String.valueOf(panelTabla.getValueAt(fila, 1))));
                   } catch (NumberFormatException e) {}
                }
           
                dataset.addSeries(series);
                x.setLabel("Eje X");
                y.setLabel("Eje Y");
                plot = new XYPlot(dataset,x,y,renderer); 
                chart = new  JFreeChart(plot);
                chart.setTitle("Gráfico de Líneas");
                panels = new ChartPanel(chart);
                panels.setBounds(12, 12, 890, 460);
                panelGrafica.add(panels);
                panels.repaint();
            } 
    }//GEN-LAST:event_botonGraficarActionPerformed
 } 
     
    private void botonTablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonTablaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_botonTablaMouseClicked
   
    private void buttonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEliminarActionPerformed
          
    DefaultTableModel dm = (DefaultTableModel) panelTabla.getModel(); //LIMPIO LA TABLA
    for (int i = 0; i < dm.getRowCount(); i++) {
        for (int j = 0; j < dm.getColumnCount(); j++) {
            dm.setValueAt("", i, j);
        }
    }      
    BtGuardar.setEnabled(false); 
    botonBorrar.setEnabled(true);
    botonArbir.setEnabled(true);
    botonGraficar.setEnabled(false);
    LbLTitulo.setVisible(false);
    LbLTitulo1.setVisible(false);
    LbLTitulo2.setVisible(false);
    LbLTutulo3.setVisible(false);
    jComboBox1.setVisible(false);
    jComboBox2.setVisible(false);
    jTextField1.setVisible(false);
    BPersonalizar.setVisible(false);
    panelCont.setVisible(false);
    panelTabla.setVisible(false); 
    
    }//GEN-LAST:event_buttonEliminarActionPerformed

    private void buttonEliminar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEliminar1ActionPerformed
    
    DefaultListModel listModel = (DefaultListModel) LISTA.getModel(); //LIMPIO LA LISTA
    listModel.removeAllElements();
    
    BtGuardar.setEnabled(false);
    BPersonalizar.setVisible(false);
    BtGuardar.setEnabled(true);
    botonBorrar.setEnabled(false);
    buttonEliminar1.setVisible(false); 
    botonBorrar.setEnabled(false);
    botonArbir.setEnabled(true);
    BtGuardar.setEnabled(false);
    LbLTitulo.setVisible(false);
    LbLTitulo1.setVisible(false);
    LbLTitulo2.setVisible(false);
    jComboBox1.setVisible(false);
    jComboBox2.setVisible(false);
    panelCont.setVisible(false);
    panelTabla.setVisible(false);
    panels.setVisible(false);
    jTextField1.setVisible(false);
      
    }//GEN-LAST:event_buttonEliminar1ActionPerformed

    private void BtGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtGuardarActionPerformed
      
       try {
         BufferedImage imagen = new BufferedImage(panels.getWidth(), panels.getHeight(), BufferedImage.TYPE_INT_ARGB);
         panels.paint(imagen.getGraphics());
         ImageIO.write(imagen, "png", new File("Graficos/grafico.png"));// SE GUARDA EL ARCHIVO EN LA DIRECCION INDICADA
       }catch (Exception ex){}
        
        botonArbir.setEnabled(true);
        botonTabla.setEnabled(false);
        botonGraficar.setEnabled(false);
        botonBorrar.setEnabled(false); 
        BtGuardar.setEnabled(false);
        buttonEliminar.setVisible(false);
        buttonEliminar1.setVisible(false);  
        LbLTitulo.setVisible(false);
        LbLTitulo1.setVisible(false);
        LbLTitulo2.setVisible(false);
        LbLTutulo3.setVisible(false);
        jComboBox1.setVisible(false);
        jComboBox2.setVisible(false);
        jTextField1.setVisible(false);
        BPersonalizar.setVisible(false);
        panelGrafica.setVisible(true); 
        panels.setVisible(false);
        modelo.removeAllElements();       
    }//GEN-LAST:event_BtGuardarActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
       
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void BPersonalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BPersonalizarActionPerformed
              
        if (jComboBox1.getSelectedIndex() == -1 || jComboBox2.getSelectedIndex() == -1 || jTextField1.getText().length() == 0){
            JOptionPane.showMessageDialog(null, "DEBE COMPLETAR DATOS PARA LA GRÁFICA","ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
           }else{ 
                buttonEliminar.setVisible(false);
                buttonEliminar1.setVisible(true);
                BtGuardar.setEnabled(true);
                botonBorrar.setEnabled(false);
                botonGraficar.setEnabled(false);
                LbLTitulo.setVisible(false);
                LbLTitulo1.setVisible(false);
                LbLTitulo2.setVisible(false); 
                LbLTutulo3.setVisible(false);
//                jComboBox1.setVisible(false);
//                jComboBox2.setVisible(false);
//                jTextField1.setVisible(false); 
//                BPersonalizar.setVisible(false);
                botonTabla.setEnabled(false);
                panelCont.setVisible(false);
                LbLX.setVisible(false);
                LbLY.setVisible(false);
                
                String titulo = ""; 
                titulo=jTextField1.getText(); //SE CAPTURA EL NUEVO NOMBRE DEL GRÁFICO
                                
                XYSplineRenderer renderer = new XYSplineRenderer(); 
                XYSeriesCollection dataset = new XYSeriesCollection();
            
                ValueAxis x = new NumberAxis();
                ValueAxis y = new NumberAxis();
            
                XYSeries series = new XYSeries("Datos"); 
                XYPlot plot; 
            
                //TOMA LOS DATOS PARA GRAFICAR 
                for(int s =0; s<fila; s++){
                try {
                    series.add(Float.parseFloat(String.valueOf(panelTabla.getValueAt(s, selectedIndex))),
                          Float.parseFloat(String.valueOf(panelTabla.getValueAt(s, selectedIndexx))));              
                   } catch (NumberFormatException e) {} 
                }                        
                dataset.addSeries(series);
                x.setLabel("Eje X");
                y.setLabel("Eje Y");
                plot = new XYPlot(dataset,x,y,renderer); 
                chart = new  JFreeChart(plot);
                chart.setTitle(titulo);// SE LE ASIGNA LA VARIABLE CON EL NUEVO NOMBRE DEL GRÁFICO
                panels = new ChartPanel(chart);
                panels.setBounds(12, 12, 890, 440);
                panelGrafica.add(panels);
                panels.repaint();  
            }               
    }//GEN-LAST:event_BPersonalizarActionPerformed
   
    /**
     * @param args the command line arguments
     */
    DefaultListModel modelo;
    String name = "";  
    int Seleccion = -1;
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BPersonalizar;
    private javax.swing.JButton BtGuardar;
    private javax.swing.JList LISTA;
    private javax.swing.JLabel LbLTitulo;
    private javax.swing.JLabel LbLTitulo1;
    private javax.swing.JLabel LbLTitulo2;
    private javax.swing.JLabel LbLTutulo3;
    private javax.swing.JLabel LbLX;
    private javax.swing.JLabel LbLY;
    private javax.swing.JButton botonArbir;
    private javax.swing.JButton botonBorrar;
    private javax.swing.JButton botonGraficar;
    private javax.swing.JButton botonSalir;
    public javax.swing.JButton botonTabla;
    private javax.swing.JButton buttonEliminar;
    private javax.swing.JButton buttonEliminar1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JPanel panelCont;
    private javax.swing.JPanel panelGrafica;
    private javax.swing.JTable panelTabla;
    // End of variables declaration//GEN-END:variables
}